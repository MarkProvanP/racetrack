.user-cards
  md-card.user-card(*ngFor='let user of users')
    div(*ngIf='!isEditingUser(user)')
      table
        tr
          th Username
          td {{user.username}}
        tr
          th Name
          td {{user.name}}
        tr
          th Email
          td {{user.email}}
        tr
          th Phone
          td {{user.phone}}
        tr
          th Role
          td {{user.role}}
        tr
          th Privilege Level
          td {{prettyLevelName(user.level)}}
    div(*ngIf='isEditingUser(user)')
      table
        tr
          th Username
          td
            md-input-container
              input(md-input, [(ngModel)]='user.username')
        tr
          th Name
          td
            md-input-container
              input(md-input, [(ngModel)]='user.name')
        tr
          th Email
          td
            md-input-container
              input(md-input, type='email', [(ngModel)]='user.email')
        tr
          th Phone
          td
            md-input-container
              input(md-input, [(ngModel)]='user.phone')
        tr
          th Role
          td
            md-input-container
              input(md-input, [(ngModel)]='user.role')
        tr
          th Privilege Level
          td
            md-select([(ngModel)]='user.level')
              md-option(*ngFor='let item of privilegesEnum | keys', [value]='item.key', [disabled]='isLevelDisabled(item.key)') {{prettyLevelName(item.key)}}
    md-card-actions
      button(md-button, [disabled]='!canModify(user)', (click)='deleteUser(user.username)') Delete
      |  
      button(md-button, [disabled]='!canModify(user)', (click)='editUser(user)', *ngIf='!isEditingUser(user)') Edit
      |  
      button(md-button, [disabled]='!canModify(user)', (click)='saveUser()', *ngIf='isEditingUser(user)') Save
      |  
      button(md-button, [disabled]='!canModify(user)', (click)='stopEditingUser()', *ngIf='isEditingUser(user)') Cancel
      |  
      button(md-button, [disabled]='!canModify(user)', (click)='resetPassword(user)') Reset Password
.register-wrapper
  md-card.register-card
    md-card-title  Create new
    md-card-content
      form.form([formGroup]='form', (ngSubmit)='onSubmit()', #registerForm='ngForm')
        md-input-container
          input(md-input, formControlName='username', required, placeholder='Username')
        md-input-container
          input(md-input, formControlName='name', required, placeholder='Name')
        md-input-container
          input(md-input, formControlName='email', required, placeholder='Email', type='email')
        md-input-container
          input(md-input, formControlName='phone', required, placeholder='Phone number')
        md-input-container
          input(md-input, formControlName='role', required, placeholder='Role')
        |  
        button(md-raised-button, color='primary', type='submit') Register
      md-select([(ngModel)]='selectedLevel')
        md-option(*ngFor='let item of privilegesEnum | keys', [value]='item.key', [disabled]='isLevelDisabled(item.key)') {{prettyLevelName(item.key)}}

.bulk-register-wrapper
  md-card.bulk-register-card
    md-card-title Bulk registration
    md-card-content
      h3 Import
      input(type='file', (change)='bulkRegisterFileEvent($event)')
      table(*ngIf='bulkUsers')
        thead
          tr
            th Username
            th Name
            th Email
            th Phone
            th Role
            th Privilege Level
            th Create?
        tbody
          tr(*ngFor='let user of bulkUsers') 
            td {{user.username}}
            td {{user.name}}
            td {{user.email}}
            td {{user.phone}}
            td {{user.role}}
            td
              md-select([(ngModel)]='user.level')
                md-option(*ngFor='let item of privilegesEnum | keys', [value]='item.key', [disabled]='isLevelDisabled(item.key)') {{prettyLevelName(item.key)}}
            td
              button(md-raised-button, color='primary', (click)='createUser(user)', [disabled]='usernameExists(user.username)') Create
